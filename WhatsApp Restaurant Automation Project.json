{
  "name": "WhatsApp Restaurant Automation Project",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        0,
        0
      ],
      "id": "10080d7e-646a-4b70-bd40-da4f41e90889",
      "name": "When chat message received",
      "webhookId": "f3548b78-c171-408e-88cd-6f97061d7eed"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a smart food ordering assistant for \"MDA Restaurant\".  \n\nRules:  \n\n1. When a user sends their first message (like hi, hello), reply with:  \n\"Welcome to MDA Restaurant üçΩÔ∏è  \nHow can I help you today?  \n- üõí Place an order  \n- ‚ÑπÔ∏è FAQ / Information  \n- üì¶ Check order / stock\"  \n\n(üëâ Keep the tone friendly like a food delivery app, not like a product e-commerce site)  \n\n2. If user wants *order*:  \n- Ask step by step: name, food item, quantity  \n- Check Inventory sheet before confirming  \n   - If available ‚Üí \"Your order for *[item]* (x quantity) is confirmed ‚úÖ\"  \n   - If not available ‚Üí \"Sorry, *[item]* is out of stock ‚ùå. Available options: [list items]\"  \n- Only confirmed orders go into the Orders sheet  \n- In Orders sheet always include:  \n   Status = Confirmed / Rejected  \n   Description = \"Order accepted (item available)\" OR \"Order rejected (out of stock)\"  \n\n3. If user wants *FAQ*:  \n- Answer short and clear (delivery time, payment method, restaurant hours)  \n\n4. If user wants *check order* or *check stock*:  \n- Ask for food name or order id  \n- Look up in Google Sheets (Orders / Inventory)  \n   - If checking order ‚Üí reply with status (Confirmed / Rejected / Cancelled / Delivered)  \n   - If checking stock ‚Üí reply with available quantity of that food  \n   - Also list all *available* food items with quantity if requested  \n\n5. If user wants *cancel order*:  \n- Reply politely:  \n  \"Sorry üôè I cannot cancel orders directly.  \n   Please call the restaurant owner first and inform them.  \n   Owner Contact: +95 1224567890\"  \n\n6. Always reply in short text like a normal WhatsApp chat  \n- Do not use **bold** or long paragraphs  \n- Use *stars* only for highlighting words  \n- Keep tone friendly, polite, and food-delivery app style  "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        208,
        0
      ],
      "id": "bc5beb1a-0367-4d78-807e-5725bd58fc6d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        80,
        208
      ],
      "id": "508ee611-3ef2-4151-8308-5e742dc68b7c",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "0bukAEDwVSFgerpw",
          "name": "Google Gemini(PaLM) Api account 153"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        224,
        208
      ],
      "id": "b6dc2fc3-ace7-4550-b1b6-99e5d7ab1bc2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 227546495,
          "mode": "list",
          "cachedResultName": "Inventory",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit#gid=227546495"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        400,
        208
      ],
      "id": "499e8146-f3c4-488d-abc9-b149df5cd045",
      "name": "Get row(s) in sheet in Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MbMlxzakZzPKEF1m",
          "name": "Google Sheets account 229"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1500564489,
          "mode": "list",
          "cachedResultName": "FAQ",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit#gid=1500564489"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        528,
        208
      ],
      "id": "3086e67a-584b-4251-8e1e-f3cb30e7b49c",
      "name": "Get row(s) in sheet in Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MbMlxzakZzPKEF1m",
          "name": "Google Sheets account 229"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I",
          "mode": "list",
          "cachedResultName": "Food Delivery System",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 68484901,
          "mode": "list",
          "cachedResultName": "Orders",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1DYaahD0xbM_0uORYbxiQCGsCMYguyVgGQy1VsRcfo9I/edit#gid=68484901"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Customer Name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Customer_Name', ``, 'string') }}",
            "Food Item": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Food_Item', ``, 'string') }}",
            "Quantity Ordered": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Quantity_Ordered', ``, 'string') }}",
            "Order Date": "={{ $now.format('yyyy-MM-dd hh-mm-ss a') }}",
            "Status": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Status', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Customer Name",
              "displayName": "Customer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Food Item",
              "displayName": "Food Item",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Quantity Ordered",
              "displayName": "Quantity Ordered",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Order Date",
              "displayName": "Order Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        640,
        208
      ],
      "id": "78d38a4f-595c-4dc3-a386-591e07cb7105",
      "name": "post order",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "MbMlxzakZzPKEF1m",
          "name": "Google Sheets account 229"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet in Google Sheets1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "post order": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "f03b4aae-770b-4790-8c54-b8c7359e8d3a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8aa7a6b00703250dcbefcb510baac06d8bd02203b4f9c49a6f275db8e3adde34"
  },
  "id": "BXUPp18qEkhf6mWx",
  "tags": []
}